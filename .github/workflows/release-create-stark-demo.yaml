name: Create-stark Sync and Publish

on:
  repository_dispatch:
    types: [version-bumped]

jobs:
  sync-and-publish:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Log Received Version Info
        run: |
          echo "Received version bump event:"
          echo "New version: ${{ github.event.client_payload.new_version }}"
          echo "Bump type: ${{ github.event.client_payload.bump_type }}"
          echo "BUMP_TYPE=${{ github.event.client_payload.bump_type }}" >> "$GITHUB_ENV"
          echo "SOURCE_VERSION=${{ github.event.client_payload.new_version }}" >> "$GITHUB_ENV"

      - name: Checkout Source Repository
        uses: actions/checkout@v4
        with:
          repository: Scaffold-Stark/scaffold-stark-2
          token: ${{ secrets.ORG_GITHUB_TOKEN }}
          path: source_repo

      - name: Checkout Destination Repository
        uses: actions/checkout@v4
        with:
          repository: Scaffold-Stark/create-stark
          token: ${{ secrets.ORG_GITHUB_TOKEN }}
          path: destination_repo

      - name: Verify Source Repository Version
        id: verify-version
        run: |
          cd source_repo
          package_version=$(node -p "require('./package.json').version")
          echo "Source repo package.json version: $package_version"
          expected_version="${SOURCE_VERSION/v/}"
          if [ "$package_version" != "$expected_version" ]; then
            echo "ERROR: Version mismatch. Expected $expected_version, found $package_version"
            exit 1
          fi
          echo "Version verification successful"

      - name: Copy Files to Destination Repository
        run: |
          rsync -av --delete \
            --include='.github/' \          # MUST include parent dir to allow descent
            --include='.github/workflows/' \ # MUST include parent dir to allow descent
            --include='.github/workflows/main.yml' \ # Specifically include the file
            --exclude='.github/*' \          # Exclude everything else directly under .github
            --exclude='.github/workflows/*' \ # Exclude everything else under .github/workflows
            --exclude='__test*__' \          # Exclude test directories/files
            --exclude='CHANGELOG*' \         # Exclude CHANGELOG files
            --exclude='CONTRIBUTING*' \      # Exclude CONTRIBUTING files
            source_repo/ destination_repo/templates/base
          cd destination_repo
          git add .
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -m "chore: sync files from scaffold-stark-2 [skip ci]"

      - name: Format .gitignore files
        run: |
          find destination_repo/templates/base -type f -name ".gitignore" | while read -r gitignore_file; do
            mjs_file="${gitignore_file%/*}/.gitignore.template.mjs"
            gitignore_content=$(cat "$gitignore_file")
            cat > "$mjs_file" <<-EOF
          const contents = () => 
          \`${gitignore_content}\`

          export default contents;
          EOF
            rm "$gitignore_file"
          done
          cd destination_repo
          git add .
          git commit -m "Processed gitignore files into template modules" || echo "No gitignore changes to commit"

      - name: Bump version
        id: bump-version
        run: |
          cd destination_repo
          npm version ${{ env.BUMP_TYPE }} -m "chore(release): %s [skip ci]"
          new_version=$(node -p "require('./package.json').version")
          echo "DEST_VERSION=v${new_version}" >> "$GITHUB_ENV"
          git push origin main --follow-tags

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org/"

      - name: Publish release
        id: publish-release
        run: |
          cd destination_repo
          npm install && npm run build && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify Slack on Success
        if: success()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: "✅ Complete workflow succeeded! Source version: ${{ env.SOURCE_VERSION }}, Destination version: ${{ env.DEST_VERSION }}. Package published to npm."
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify Slack on Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: "❌ DESTINATION SYNC/PUBLISH FAILED - Source version already bumped to ${{ env.SOURCE_VERSION }}. Manual intervention required."
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}